# -*- coding: utf-8 -*-
"""Heart_Attack_Prediction_Logistic_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15es-Gu6fcild5_FP16ZlModhjr_D5YVb
"""

# Commented out IPython magic to ensure Python compatibility.
# Get all essential libraries 
import pandas as pd 
import numpy as np 
import seaborn as sns
import matplotlib.pyplot as plt 
# %matplotlib inline 
from sklearn.linear_model import LogisticRegression 
from sklearn.model_selection import train_test_split , cross_val_predict

# Get the data 
data = pd.read_csv("/content/heart.csv")
data

data.describe()

data.info()

data.isna().sum()

# check for any correlations between variables 
corr = data.corr()
sns.heatmap(corr)

# create x and y 
 feature_cols = ['cp','thalach','slope']
 x = data[feature_cols] # predictor 
 y = data.target # response

x.head()

y.head()

# split train and test data
x_train , x_test , y_train ,y_test = train_test_split(x,y,test_size = 0.1 , random_state = 100)

print(x_train.shape)
print(x_test.shape)
print(y_train.shape)
print(y_test.shape)

# instantiate fit 
logreg = LogisticRegression()
logreg.fit(x_train,y_train)

data[data['target']==0]

score = logreg.score(x_test,y_test)

print(score)

# Confusion Metrix 
from sklearn import metrics 
cm = metrics.confusion_matrix(y_test,logreg.predict(x_test))
print(cm)

# precision - best value 1 and worst vaue is 0 
precision = metrics.precision_score(y_test,logreg.predict(x_test))
print(precision )

